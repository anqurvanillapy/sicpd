(define (count-change m)
  (define (cc-iter amount coin-no)
    (cond ((= amount 0) 1)
          ((or (< amount 0) (= coin-no 0)) 0)
          (else (+ (cc-iter amount (- coin-no 1))
                   (cc-iter (- amount (coin-value coin-no)) coin-no)))))
  (define (coin-value no)
    (cond ((= no 1) 1)
          ((= no 2) 5)
          ((= no 3) 10)
          ((= no 4) 25)
          ((= no 5) 50)))
  (cc-iter m 5))
